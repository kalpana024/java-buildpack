DEBUG_LEVEL=0

if [ "X$CAV_MON_HOME" = "X" ]; then
  if [ -d /opt/cavisson/monitors ];then
    export CAV_MON_HOME="/opt/cavisson/monitors"
  elif [ -d ~/cavisson/monitors ];then
    export CAV_MON_HOME=~/cavisson/monitors
  else
    echo "CAV_MON_HOME is not set"
    exit -1
  fi
fi

. $CAV_MON_HOME/bin/ns_check_monitor_func.sh
INTERVAL_SECS=$MON_FREQUENCY

display_help_and_exit()
{
  echo "Usage: cm_kafka_consumer_groups [-v <vector_prefix>] or [-i <Interval>] [-p <path>] [-s <server>] [-g <group>]"
  echo "-v: option used to get vector list for Command (df -P). Prefix will added before these vector names"
  echo "-i: option used for interval (in seconds)"
  echo "-X: used for <vector prefix/noprefix>"
  echo "-L: used for <header/data>"
  echo "-p: path"
  echo "-s: server"
  echo "-g: group"
  exit -1
}

get_data()
{
  declare -a array
  array=( $($path/kafka-consumer-groups.sh --bootstrap-server $path$server --new-consumer --describe --group $group|tr ' ' '|') )
  #array=( $(cat file|tr ' ' '|') )
  array_len=${#array[@]}
  for((i=1; i < $array_len; i++))
  {
    line=`echo ${array[$i]}|tr -d ','`
    out=`echo $line|awk -F'|' '{print $2"_"$3"|"$4" "$5" "$6}'`
    partition=`echo $line | awk -F'|' '{print $3}'`
    echo $partition":"$group$MON_VECTOR_SEPARATOR$out | sed -e "s/unknown/0/g"
  }
}

VECTOR_FLAG="0"

while getopts i:v:D:X:L:s:p:g: arg
do
  case $arg in
    v) VECTOR_FLAG="1"
       vector_prefix=$OPTARG
       ;;
    X) vector_prefix=$OPTARG
       ;;
    L) if [ "X$OPTARG" = "Xheader" -o "X$OPTARG" = "XHEADER" ];then
         VECTOR_FLAG="1"
       fi
       ;;
    i) INTERVAL_SECS=$OPTARG
       echo $INTERVAL_SECS | grep '^[0-9]*$' 2>&1 >/dev/null
       if [ $? != 0 ];then
         echo "Integer expression must required with -i option!"
         exit -1
       fi
       ;;
    D) DEBUG_LEVEL=$OPTARG ;;         #has default debug_level 0
    s) server=$OPTARG
       ;;
    p) path=$OPTARG
       ;;
    g) group=$OPTARG
       ;;

    ?) display_help_and_exit ;;
  esac
done

if [ "X$VECTOR_FLAG" != "X1" ] && [ "X$server" = "X" -o "X$group" = "X" -o "X$path" = "X" ];then
  display_help_and_exit
fi

if [ "X$INTERVAL_SECS" = "X" ];then
  INTERVAL_SECS=10
fi

if [ "X$VECTOR_FLAG" = "X1" ];then
  echo "Warning: No vectors."
else
  while :
  do
    get_data
    sleep $INTERVAL_SECS
  done
fi

