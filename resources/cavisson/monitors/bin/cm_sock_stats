#################################################################################################
# Name  :  cm_sock_stats
# Usage :  cm_sock_stats -i <interval in sec(default 10 sec)> -D <debug_level 0/1>
# Purpose: This shell outputs the socket statistics, run once
# Output : 
#          377 15 0 0 65 17 112 5 0 0 0 0
# Initial version : Monday, June 11 2012
# Modification    : 
# Author Name     : Prachi Kumari
#################################################################################################
DEBUG_LEVEL=0

#Set CAV_MON_HOME to allow testing from command line
if [ "X$CAV_MON_HOME" = "X" ]; then
  if [ -d /opt/cavisson/monitors ];then
    export CAV_MON_HOME="/opt/cavisson/monitors"
  elif [ -d ~/cavisson/monitors ];then
    export CAV_MON_HOME=~/cavisson/monitors
  else
    echo "CAV_MON_HOME is not set"
    exit -1
  fi
fi

. $CAV_MON_HOME/bin/ns_check_monitor_func.sh
INTERVAL_SECS=$MON_FREQUENCY

set_error_log_file()
{
  if [ "XX$CAV_MON_HOME" != "XX" ];then
    DEBUG_LOG_FILE="$CAV_MON_HOME/logs/cm_sock_stats_"$MON_TEST_RUN"_"$VECTOR_NAME"_debug.log"
    ERROR_LOG_FILE="$CAV_MON_HOME/logs/cm_sock_stats_"$MON_TEST_RUN"_"$VECTOR_NAME"_error.log"
  else
    DEBUG_LOG_FILE="/tmp/cm_sock_stats_"$MON_TEST_RUN"_"$VECTOR_NAME"_debug.log"
    ERROR_LOG_FILE="/tmp/cm_sock_stats_"$MON_TEST_RUN"_"$VECTOR_NAME"_error.log"
    error_log "CAV_MON_HOME is not exported, putting logs to /tmp/."
  fi
}

set_error_log_file

debug_log()
{
  if [ "X$DEBUG_LEVEL" = "X0" ]; then
    return
  else
    #echo "Debug: $*"
    echo "`date +'%F %X'`|$*" >> $DEBUG_LOG_FILE
  fi
}

error_log()
{
  ns_log_event "Major" "$*"
  echo "`date +'%F %X'`|$*" >> $ERROR_LOG_FILE
}

error_log_and_exit()
{
  error_log "$*"
  exit -1
}

Usage()
{
  error_log "$*"
  error_log "Usage: cm_sock_stats -i <interval in sec(default 10 sec)> -D <debug_level 0/1>]"
  exit -1
}

exec_cmd_and_show_data()
{
  debug_log "Function called exec_cmd_and_show_data()" 
  #execute command
  cmd_out=`cat /proc/net/sockstat`
  #create array of sockstats values 
  sockstats_array=(`echo $cmd_out |  cut -d' ' -f3,6,8,10,12,14,17,19,22,25,28,30`)
  echo ${sockstats_array[@]}
  debug_log "Function stops with values : ${sockstats_array[@]}"
}


#############################################################################################################


while getopts i:D:? C  2>/dev/null
do
  case $C in
    i) INTERVAL_SECS=$OPTARG;;          #has default interval 10 sec
    D) DEBUG_LEVEL=$OPTARG;;       #has default debug_level 0
    ?) Usage "Invalid arguments";;
    *) Usage "Invalid arguments";;
  esac
done

debug_log "Monitor Starts"

lib_sleep $INTERVAL_SECS                    #Because first sample comes after freq
while true
  do
    isTestOver $MON_TEST_RUN
    # Test is over. So exit with success status
    if [ $? = 1 ]; then
      exit 0
    fi

    #Get socket statistics by executing command 'cat /proc/net/sockstat'
    exec_cmd_and_show_data

    lib_sleep $INTERVAL_SECS
  done

debug_log "Monitor Stops"

exit 0
