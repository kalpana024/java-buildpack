DEBUG_LOG_FILE="/tmp/chm_har_file_$$.log"

DEBUG=0

debug_log()
{
  if [ $DEBUG -eq 0 ]; then
    return;
  fi

  echo $* 
  #echo "`date +\'%D %T\'`|$*" >>$DEBUG_LOG_FILE
}

NUM_URL_FILTERED_HAR_FILES=0
NUM_TITLE_FILTERED_HAR_FILES=0
filter_har_files_and_rename()
{
  debug_log "Method filter_har_files_and_rename() called, Pattern.... - URL = [$URL]"
 
  debug_log "########### PWD = `pwd`" 
  #URL_FILTERED_HAR_FILES=`grep -l -w "$URL" *.har | grep -v "$HAR_RENAME_INFO_FILE" | awk -F"\n" '{printf $1" "}'` 
  URL_FILTERED_HAR_FILES=`grep -l -w "\"url\":.*\"$URL\"" *.har | grep -v "$HAR_RENAME_INFO_FILE" | awk -F"\n" '{printf $1" "}'` 
  debug_log "List of Har Files filtered by url $URL - [$URL_FILTERED_HAR_FILES]"

  NUM_URL_FILTERED_HAR_FILES=`echo $URL_FILTERED_HAR_FILES | awk -F' ' '{print NF}'`
  debug_log "NUM_HAR_FILE=$NUM_URL_FILTERED_HAR_FILES"

  if [ "X$NUM_URL_FILTERED_HAR_FILES" = "X" -o "X$NUM_URL_FILTERED_HAR_FILES" = "X0" ];then
    debug_log "Info: There is no url filtered har files so ignoring this pattern " 
    return
  fi

  debug_log "Pattern.... - PageTitle  = [$PageTitle]"

  #TITLE_FILTERED_HAR_FILES=`grep -l -w "$PageTitle" $URL_FILTERED_HAR_FILES | awk -F"\n" '{printf $1" "}'` 
  TITLE_FILTERED_HAR_FILES=`grep -l -w "\"title\":.*\"$PageTitle\"" $URL_FILTERED_HAR_FILES | awk -F"\n" '{printf $1" "}'` 

  debug_log "List of Har Files filtered by page title $URL - [$TITLE_FILTERED_HAR_FILES]"

  NUM_TITLE_FILTERED_HAR_FILES=`echo $TITLE_FILTERED_HAR_FILES | awk -F' ' '{print NF}'`
  if [ "X$NUM_TITLE_FILTERED_HAR_FILES" = "X" -o "X$NUM_TITLE_FILTERED_HAR_FILES" = "X0" ];then
    debug_log "Info: There is no page title filtered har files so ignoring this pattern " 
    return 
  fi

  for ((i = 1; i <= $NUM_TITLE_FILTERED_HAR_FILES; i++))
  do
    HAR_FILE=`echo $TITLE_FILTERED_HAR_FILES | awk -F' ' -v idx=$i '{print $idx}'`
    is_already_renamed=`echo $HAR_FILE | awk -F'_' '{print $1}'`

    debug_log "Renaming HAR_FILE => $HAR_FILE,  is_already_renamed = $is_already_renamed"
    if [ "X$is_already_renamed" != "XP" ];then
      mv $HAR_FILE P_$PageName.$HAR_FILE
    elif [ "X$is_already_renamed" == "XP" ];then
      debug_log "Har files alredy renamed. So verifying renaming is correct or not"
      PageName_from_Har=`echo $HAR_FILE | awk -F'.' '{print $1}'`
      debug_log "Comparing: PageName_from_Har=$PageName_from_Har, PageName = P_$PageName"
      if [ "X$PageName_from_Har" != "XP_$PageName" ];then
        debug_log "Since Renaming is wrong so Again renaming it"
        R_HAR_FILE=`echo $HAR_FILE | sed "s/$PageName_from_Har/P_$PageName/g"`
        mv $HAR_FILE $R_HAR_FILE
        debug_log "After correction: HAR_FILE = $R_HAR_FILE"
      else
        debug_log "Renaming is correct."
      fi
    fi
  done
}

rename_har_files()
{
  debug_log "Method rename_har_files() Called, HAR_RENAME_INFO_FILE = $HAR_RENAME_INFO_FILE"

  if [ ! -f $HAR_RENAME_INFO_FILE ];then
    echo "Warning: provided har renaming file $HAR_RENAME_INFO_FILE does not exist." 
    exit 1
  fi

  while read line
  do
    echo $line | grep "^#" >/dev/null 2>&1 
    if [ $? -eq 0 ];then
      debug_log "Ignoring Line = $line"
      continue
    fi

    debug_log "Processing line = $line"
    PageName=`echo $line | awk -F"_CAV_" '{printf $1}'`
    PageTitle=`echo $line | awk -F"_CAV_" '{printf $2}'`
    URL=`echo $line | awk -F"_CAV_" '{printf $3}'`
    debug_log "PageName=[$PageName], PageTitle = [$PageTitle], URL=[$URL]"

    if [ "XX$PageName" = "XX" -o "XX$PageTitle" = "XX" -o "XX$URL" = "XX" ];then
      continue 
    fi

    filter_har_files_and_rename
  done < $HAR_RENAME_INFO_FILE
}

make_harp()
{
  for HAR_NAME in `ls *.har`
  do
    echo "onInputData(" >>${HAR_NAME}p 2>&1
    cat $HAR_NAME >>${HAR_NAME}p 2>&1
    echo ");" >>${HAR_NAME}p 2>&1
  done
}

##################################### Calling ####################

HAR_RENAME_INFO_FILE=$1

debug_log "HAR_RENAME_INFO_FILE = [$HAR_RENAME_INFO_FILE]"

rename_har_files
make_harp

exit 0
