#!/bin/ksh
##########################################################################
#Program Name: cm_restore_db   
#Syntax      : cm_restore_db -H <HOST/IP> -P <PORT> -S <SID> -I <Instance-Name> -E <Email-Id> -v <Domain> -i <interval in secs> 
#Author      : Prachi              
#              This monitor is very much specific to Kohls database only.
###########################################################################

#Set CAV_MON_HOME to allow testing from command line
if [ "X$CAV_MON_HOME" = "X" ]; then
  if [ -d /opt/cavisson/monitors ];then
    export CAV_MON_HOME="/opt/cavisson/monitors"
  elif [ -d ~/cavisson/monitors ];then
    export CAV_MON_HOME=~/cavisson/monitors
  else
    echo "CAV_MON_HOME is not set"
    exit -1
  fi
fi

export CAV_MON_HOME
 . $CAV_MON_HOME/bin/ns_check_monitor_func.sh

set_up_env() 
{
  DEBUG=0
  INTERVAL=10
  HOST=""
  PORT=""
  SID=""
  INSTANCE=""
  export ORACLE_HOME=/ora/orasoft/oracle/product/11.2.0/db11.2.0.3
  #ORACLE_HOME=/prod/prop/orasoft/oracle/product/11.2.0/db11.2.0.2
  SQL_PLUS_BIN=$ORACLE_HOME/bin/sqlplus
  
  QUERY_FOR_IDs="" 
  QUERY="" 
  QUERY1="" 
  QUERY2="" 
  QUERY3="" 
  QUERY4="" 
  QUERY5="" 
  QUERY6="" 
  QUERY7="" 
  QUERY8="" 
  QUERY_OUT_FILE="/tmp/cm_restore_db.out.$$"
  QUERY_OUT_FILE_FOR_ALL_ID="/tmp/cm_restore_db.all.ids.out.$$"
  QUERY_ERR_FILE="/tmp/cm_restore_db.err.$$"
} 

ns_log_event()
{
  VERSION="1.0"
  SEVERITY="$1"
  EVENT_MSG="$2"
}

set_error_and_debug_log_file()
{
  if [ "XX$CAV_MON_HOME" != "XX" ];then
    DEBUG_LOG_FILE="$CAV_MON_HOME/logs/cm_restore_db_"$MON_TEST_RUN"_"$VECTOR_NAME"_debug.log"
    ERROR_LOG_FILE="$CAV_MON_HOME/logs/cm_restore_db__"$MON_TEST_RUN"_"$VECTOR_NAME"_error.log"
  else
    DEBUG_LOG_FILE="/tmp/cm_restore_db_debug_log.$$"
    ERROR_LOG_FILE="/tmp/cm_restore_db_error_log.$$"
    error_log "CAV_MON_HOME is not exported, putting logs to /tmp/."
  fi
}

error_log()
{
  ns_log_event "Major" "$*" >> $ERROR_LOG_FILE
}

debug_log()
{
    if [ "X$DEBUG" = "X0" ]; then
      return
    else
      echo "Debug: $*" >> $DEBUG_LOG_FILE
    fi
}

#Function to remove output files. 
remove_files()
{
 rm -f $QUERY_ERR_FILE $QUERY_OUT_FILE $QUERY_OUT_FILE_FOR_ALL_ID
}

#Function to run database queries
make_and_run_query_oracle()
{
  debug_log "run_query called."

  QUERY_FOR_IDs="select ID from ATGPRDCORE.DPS_USER where LOGIN LIKE '${EMAIL_ID}%@${DOMAIN}';"

  $SQL_PLUS_BIN atgteam/datar3ad@"(description=(address=(host=$HOST)(protocol=tcp)(port=$PORT))(connect_data=(sid=$SID)(instancename=$INSTANCE)))" >>$QUERY_OUT_FILE_FOR_ALL_ID 2>>$QUERY_ERR_FILE <<+ 
$QUERY_FOR_IDs
;
+

  #Following queries Kohls want to get executed
  while read inputline
  do
    QUERY="DELETE FROM ATGPRDCORE.KLS_USER_INTERESTS WHERE ID = $inputline;"
    QUERY1="DELETE FROM ATGPRDCORE.DPS_CONTACT_INFO WHERE ID = $inputline;"
    QUERY2="DELETE FROM ATGPRDCORE.dps_credit_card WHERE ID  = $inputline;"
    QUERY3="DELETE FROM ATGPRDCORE.KLS_DPSX_CREDIT_CARD  WHERE ID = $inputline;"
    QUERY4="DELETE FROM ATGPRDCORE.DPS_OTHER_ADDR where USER_ID = $inputline;"
    QUERY5="DELETE FROM ATGPRDCORE.DPS_USER_PREVPWD where ID = $inputline;"
    QUERY6="DELETE FROM ATGPRDCORE.DPS_USER_ADDRESS where ID = $inputline;"
    QUERY7="DELETE FROM ATGPRDCORE.KLS_DPSX_USER WHERE ID = $inputline;"
    QUERY8="DELETE FROM ATGPRDCORE.DPS_USER WHERE ID = $inputline;"

  $SQL_PLUS_BIN atgteam/datar3ad@"(description=(address=(host=$HOST)(protocol=tcp)(port=$PORT))(connect_data=(sid=$SID)(instancename=$INSTANCE)))" >>$QUERY_OUT_FILE 2>>$QUERY_ERR_FILE <<+ 
$QUERY
$QUERY1
$QUERY2
$QUERY3
$QUERY4
$QUERY5
$QUERY6
$QUERY7
$QUERY8
;
+

  done < $QUERY_OUT_FILE_FOR_ALL_ID

 if [ $? != 0 ];then 
   ns_log_event "Info" "Check monitor failed"
   ns_check_mon_fail_and_exit
   exit 255
 else 
   ns_log_event "Info" "Check monitor passed"
   ns_check_mon_pass_and_exit
   exit 0
 fi 
}

Usage()
{
  error_log "$*"
  error_log "Usage: cm_restore_db -H <HOST/IP> -P <PORT> -S <SID> -I <Instance-Name> -E <Email id> -v <Domain-Name> -i <interval in secs>"
  exit -1
}

#####################################################################################################################################################

#Must set debug/error log file in the beginning
set_error_and_debug_log_file

set_up_env 

while getopts H:P:S:I:E:v:i:D? c  2>/dev/null
do
  case $c in
    H) HOST=$OPTARG ;; 
    P) PORT=$OPTARG ;; 
    S) SID=$OPTARG ;; 
    I) INSTANCE=$OPTARG ;;  
    E) EMAIL_ID=$OPTARG ;;  
    v) DOMAIN=$OPTARG ;;  
    i) INTERVAL=$OPTARG;;    #has default 10 sec
    D) DEBUG=$OPTARG;;
    ?) Usage "Invalid arguments";;
    *) Usage "Invalid arguments";;
  esac
done

debug_log "Restore database Monitor started."
make_and_run_query_oracle
remove_files

exit 0


