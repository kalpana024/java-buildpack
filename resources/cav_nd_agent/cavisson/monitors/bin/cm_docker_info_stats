#!/bin/bash
#
#NAME: cm_docker_info_stats
#PURPOSE: This is a sample dynamic custom monitor to get data from docker memory stats 
#It parses output of docker info and outputs all data in one line
#Option - 'Run Once'
#GDF - cm_docker_info_stats.gdf
#Keyword -
# CUSTOM_MONITOR 192.168.1.66 cm_docker_info_stats.gdf INFO 2 cm_docker_info_stats
#
# Sample Output : total running paused stopped
#   5 4 0 1     :   5      4       0      1
#
#######################################################################################################################
if [ "X$CAV_MON_HOME" = "X" ]; then
  if [ -d /opt/cavisson/monitors ];then
    export CAV_MON_HOME="/opt/cavisson/monitors"
  elif [ -d ~/cavisson/monitors ];then
    export CAV_MON_HOME=~/cavisson/monitors
  else
    echo "CAV_MON_HOME is not set"
    exit -1
  fi
fi

. $CAV_MON_HOME/bin/ns_check_monitor_func.sh
INTERVAL_SECS=$MON_FREQUENCY
set_mon_shell

display_help_and_exit()
{
  echo "$1"
  echo "Usage: cm_docker_info_stats [-v <vector_prefix> ] or [-i <Interval>]"
  echo "-v: option used to get vector list for Command (mpstat -P ALL). Prefix will added before these vector names"
  echo "-i: used for interval (in seconds)"
  echo "-X: used for <vector prefix/noprefix>"
  echo "-L: used for <header/data>"
  exit -1
}

show_data()
{
  total=0
  running=0
  paused=0
  stopped=0
  docker ps -a | grep -v "CONTAINER" > /tmp/docker_info_output 2>/dev/null
  if [ $? -ne 0 ];then
    echo "Unable to run docker command"
    exit -1
  fi
  while read line
  do
    total=`expr $total + 1`

    echo $line | grep "Up" >/dev/null 2>&1
    if [ $? -eq 0 ];then
      echo $line | grep "Paused" >/dev/null 2>&1
      if [ $? -eq 0 ];then
        paused=`expr $paused + 1`
        continue
      else
        running=`expr $running + 1`
        continue
      fi
    fi

    echo $line | grep "Exited" >/dev/null 2>&1
    if [ $? -eq 0 ];then
      stopped=`expr $stopped + 1`
      continue
    fi
  done < /tmp/docker_info_output
  echo "$total $running $paused $stopped"
  rm -f /tmp/docker_info_output
}



ls /cgroup >/dev/null 2>&1

if [ $? -eq 0 ];then
  stats_path="/cgroup"
else
  ls /sys/fs/cgroup >/dev/null 2>&1
  if [ $? -eq 0 ];then
    stats_path="/sys/fs/cgroup"
  else
    echo "cgroup directory not found"
    exit -1
  fi
fi

while getopts i:? arg
do
  case $arg in
    i) INTERVAL_SECS=$OPTARG
       freq_option="1"
       echo $INTERVAL_SECS | grep '^[0-9]*$' 2>&1 >/dev/null
       if [ $? != 0 ];then
         echo "Integer expression must required with -i option!"
         exit -1
       fi
       ;;
    *) display_help_and_exit ;;
    ?) display_help_and_exit ;;
  esac
done

while :
do
  isTestOver $MON_TEST_RUN
  # Test is over. So exit with success status
  if [ $? = 1 ]; then
    exit 0
  fi

  show_data
  lib_sleep $INTERVAL_SECS
done

exit 0
