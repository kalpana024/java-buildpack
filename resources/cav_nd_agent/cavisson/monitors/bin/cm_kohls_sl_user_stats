# Name - cm_kohls_sl_user_stats

if [ "X$CAV_MON_HOME" = "X" ]; then
  if [ -d /opt/cavisson/monitors ];then
    export CAV_MON_HOME="/opt/cavisson/monitors"
  elif [ -d ~/cavisson/monitors ];then
    export CAV_MON_HOME=~/cavisson/monitors
  else
    echo "CAV_MON_HOME is not set"
    exit -1
  fi
fi

. $CAV_MON_HOME/bin/ns_check_monitor_func.sh

INTERVAL_SECS=$MON_FREQUENCY
DEBUG_LOG_FILE="/tmp/cm_kohls_sl_user_stats.debug.$$"
DEBUG=0

isTestOver()
{
  TEST_RUN=$1

  # This is to allow testing from command line as test may not be running and TEST_RUN is not set
  if [ "X$TEST_RUN" = "X" ];then
    # Test is not over
    return 0
  fi

  RUNNING_TEST_FILE=$CAV_MON_HOME/logs/running_tests/$TEST_RUN

  if [ ! -f $RUNNING_TEST_FILE ];then
    # Test is over
    return 1
  fi

  # Test is not over
  return 0
}

debug_log()
{
    if [ "X$DEBUG" = "X0" ]; then
      return
    else
      echo "Debug: $*" >> $DEBUG_LOG_FILE
    fi
}

get_data()
{
  #ProductCount=`curl http://192.168.1.66:9014/monitors/getPromotedCount 2>/dev/null`
  #RemaningCount=`curl http://192.168.1.66:9014/monitors/getRemainingCount 2>/dev/null`
  ProductCount=`curl http://${HOST_NAME}/user/getPromotedCount 2>/dev/null`
  RemaningCount=`curl http://${HOST_NAME}/user/getRemainingCount 2>/dev/null`
}

show_data()
{
  debug_log "show_output method called."
  printf "$ProductCount $RemaningCount"
  echo " "
}

display_help_and_exit()
{
  echo "Error: Incorrect Usage!"
  echo "Usage:"
  echo "cm_kohls_sl_user_stats [-i <Interval>] [-h <Host>]"
  echo "-i: used for interval (in seconds)"
  echo "-h: used for host"
  exit -1
}

while getopts h:i:D? arg
do
  case $arg in
    h) HOST_NAME=$OPTARG
       ;;
    i) INTERVAL_SECS=$OPTARG
       echo $INTERVAL_SECS | grep '^[0-9]*$' 2>&1 >/dev/null
       if [ $? != 0 ];then
         echo "Integer expression must required with -i option!"
         exit -1
       fi
       ;;
    D) DEBUG=1;;
    *) display_help_and_exit ;;
    ?) display_help_and_exit ;;
  esac
done

debug_log "cm_kohls_sl_user_stats monitor called."

while true
  do
    # Test is over. So exit with success status
    isTestOver $MON_TEST_RUN
    if [ $? -eq 1 ]; then
      exit 0
    fi

    get_data
    show_data

    lib_sleep $INTERVAL_SECS
 done

exit 0
