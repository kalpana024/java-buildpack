#################################################################
# This shell is used to check the status of the URL with the 	#
# help of curl command.						#
# If the URL gives the 200OK then it will show the output as 1	#
# else 0							#
# 								#
# ./cm_get_url_status -u <URL> -i <Interval> -p <proxy>		#
# 	Created on - 9/20/2017 by - pranshu mittal		#
#								#
#################################################################


#Set CAV_MON_HOME, if not set
if [ "X$CAV_MON_HOME" = "X" ]; then
  if [ -d /opt/cavisson/monitors ];then
    export CAV_MON_HOME="/opt/cavisson/monitors"
  elif [ -d ~/cavisson/monitors ];then
    export CAV_MON_HOME=~/cavisson/monitors
  else
    echo "CAV_MON_HOME is not set"
    exit -1
  fi
fi


#including this shell for the use of various global variables
. $CAV_MON_HOME/bin/ns_check_monitor_func.sh

TIME_OUT=5
INTERVAL_SECS=$MON_FREQUENCY
data=0
PROXY=""

usage="Invalid argument: -u<URL (mandatory)> -i<Interval (optional)> -p<proxy(optional)>"

check_mandatory_args()
{
  if [ "X$URL" = "X" ]; then
    echo "Mandatory arg -u<URL> missing"
    echo "$usage"
    exit -1
  fi

  if [ "X$Proxy" != "X" ]; then
   PROXY="-x $Proxy"
  fi

}

process_data()
{
  STATUS_CODE=`curl $URL -o /dev/null -s -w %{http_code} -m $TIME_OUT $PROXY`
  if [ "X$STATUS_CODE" == "X200" ]
  then
    data=1
  fi
}

while getopts u:i:p: arg
do
  case $arg in
    u) URL=$OPTARG
       ;;
    i) INTERVAL_SECS=$OPTARG
       echo $INTERVAL_SECS | grep '^[0-9]*$' 2>&1 >/dev/null
       if [ $? != 0 ];then
         echo "Interval is not correct. It should be numeric (> 1 secs)"
         exit -1
       fi
       ;;
    p) Proxy=$OPTARG
       ;;
    *) echo "$usage"
       ;;
  esac
done

check_mandatory_args

while : 
do
  process_data
  echo $data
  sleep $INTERVAL_SECS
  data=0
done



