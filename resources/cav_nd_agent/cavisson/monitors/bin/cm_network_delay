##########################
# Name  : cm_network_delay
# Usage :
# Purpose:
# Output :
#
# Initial version : Friday, May 14 2012
# Modification    : Prachi - 07 Nov 2012 (Enhancement for WellsFargo HP-UX servers.)
# Author Name     : Prachi Kumari
##########################

#Inteval between two packets of ping for Linux
USER=`whoami`
if [ "X$USER" = "Xroot" ];then 
  PING_PKT_INTERVAL=0.2
else
  PING_PKT_INTERVAL=1
fi

#It takes 20 seconds when delay is high. Hence changing COUNT from 100 to 10.
COUNT=10
DEBUG_LEVEL=0

OS_NAME=`uname`

#Set CAV_MON_HOME to allow testing from command line
if [ "X$CAV_MON_HOME" = "X" ]; then
  if [ -d /opt/cavisson/monitors ];then
    export CAV_MON_HOME="/opt/cavisson/monitors"
  elif [ -d ~/cavisson/monitors ];then
    export CAV_MON_HOME=~/cavisson/monitors
  else
    echo "CAV_MON_HOME is not set"
    exit -1
  fi
fi

. $CAV_MON_HOME/bin/ns_check_monitor_func.sh
INTERVAL_SECS=$MON_FREQUENCY
PING_OUT_HPUX=$CAV_MON_TMP_DIR/ping_out.$$

set_error_log_file()
{
  if [ "XX$CAV_MON_HOME" != "XX" ];then
    DEBUG_LOG_FILE="$CAV_MON_HOME/logs/cm_network_delay_"$MON_TEST_RUN"_"$VECTOR_NAME"_debug.log"
    ERROR_LOG_FILE="$CAV_MON_HOME/logs/cm_network_delay_"$MON_TEST_RUN"_"$VECTOR_NAME"_error.log"
  else
    DEBUG_LOG_FILE="/tmp/cm_network_delay_"$MON_TEST_RUN"_"$VECTOR_NAME"_debug.log"
    ERROR_LOG_FILE="/tmp/cm_network_delay_"$MON_TEST_RUN"_"$VECTOR_NAME"_error.log"
    error_log "CAV_MON_HOME is not exported, putting logs to /tmp/."
  fi
}

set_error_log_file

debug_log()
{   
  if [ "X$DEBUG_LEVEL" = "X0" ]; then
    return
  else
    #echo "Debug: $*"
    echo "`date +'%F %X'`|$*" >> $DEBUG_LOG_FILE
  fi
} 

error_log()
{
  ns_log_event "Major" "$*"
  echo "`date +'%F %X'`|$*" >> $ERROR_LOG_FILE
}

error_log_and_exit()
{
  error_log "$*"
  exit -1
}


Usage()
{
  error_log "$*"

  error_log "Usage: cm_network_delay -s <hostname_or_IP> -S <size(by default,ping command will run without size)> -c <count(default is 100)> -i <interval in sec(default 10 sec)> -D <debug_level 0/1>]"

  exit -1
}


get_data()
{

# -b is for pinging broadcast address
if [ "X$OS_NAME" = "XLinux" ]; then
  if [ "X$SIZE" = "X" ];then
    output=`ping -b -q -c $COUNT -i $PING_PKT_INTERVAL $HOSTNAME_OR_IP 2>/dev/null`
  else
    output=`ping -b -q -S $SIZE -c $COUNT -i $PING_PKT_INTERVAL $HOSTNAME_OR_IP 2>/dev/null`
  fi
elif [ "X$OS_NAME" = "XHP-UX" ]; then
  if [ "X$SIZE" = "X" ];then
    #/usr/sbin/ping -I 5 ebstfr30.wellsfargo.com 56 -n 2
    /usr/sbin/ping $HOSTNAME_OR_IP -n $COUNT >> $PING_OUT_HPUX
  else
    /usr/sbin/ping $HOSTNAME_OR_IP $SIZE -n $COUNT >> $PING_OUT_HPUX
  fi
fi
#Ping output on Linux
# ping -q -s 64 -c 10 .i 0.2 192.168.1.1
# PING 192.168.1.1 (192.168.1.1) 34(62) bytes of data.
# 
# --- 192.168.1.1 ping statistics ---
# 10 packets transmitted, 10 received, 0% packet loss, time 9005ms
# rtt min/avg/max/mdev = 0.474/0.883/2.335/0.535 ms

#Ping output on HP-UX
#/usr/sbin/ping ebstfr30.wellsfargo.com
#PING ebstfr30.wellsfargo.com: 64 byte packets
#64 bytes from 10.23.21.235: icmp_seq=0. time=0. ms
#64 bytes from 10.23.21.235: icmp_seq=1. time=0. ms
#
#64 bytes from 10.23.21.235: icmp_seq=2. time=0. ms
#64 bytes from 10.23.21.235: icmp_seq=3. time=0. ms
#64 bytes from 10.23.21.235: icmp_seq=4. time=0. ms
#
#----ebstfr30.wellsfargo.com PING Statistics----
#5 packets transmitted, 5 packets received, 0% packet loss
#round-trip (ms)  min/avg/max = 0/0/0

  debug_log "Output of ping is: $output"

  if [ "X$OS_NAME" = "XLinux" ]; then
    #  if user provides invalid ip as 192.168.1.412
    #  "ping: unknown host 192.168.1.412" message is printed on stderr and output is empty
    if [ "X$output" = "X" ]; then
      MIN=0
      AVG=0
      MAX=0
      Packet_loss=100
      Packet_received=0
    else
      # To handle error:  "Destination Host Unreachable"
      # In case of error:
      # 4 packets transmitted, 0 received, +4 errors, 100% packet loss, time 3004ms
      # Else
      # 3 packets transmitted, 3 received, 0% packet loss, time 2003ms
      #
      # Packet_loss was calculated as awk -F'%' '{printf $1"\n"}';
      # hence Packet_loss may have a space with value
      # echo " 0% packet loss" | awk -F'%' '{printf $1"\n"}' ===>> ' 0'
      # Hence Adding awk -F' ' '{printf $1"\n"}' to avoid this additional ' '
      Error_check=`echo $output | grep "errors"`
      if [ $? -eq 0 ]; then
        Packet_loss=`echo $output | grep "packets transmitted" |  awk -F',' '{print $4}' | awk -F'%' '{print $1}'|awk -F' ' '{printf $1"\n"}'`
      else
        Packet_loss=`echo $output | grep "packets transmitted" |  awk -F',' '{print $3}' | awk -F'%' '{print $1}'|awk -F' ' '{printf $1"\n"}'`
      fi
      Packet_received=`echo $output | grep "packets transmitted" |  awk -F',' '{print $2}' | awk -F' ' '{printf $1"\n"}'`

      # Calculating MIN/AVG/MAX
      # rtt min/avg/max/mdev = 0.474/0.883/2.335/0.535 ms
      # var will be empty if "rtt min/avg/max/mdev = 0.474/0.883/2.335/0.535 ms" message is not present in output
      var=`echo $output |  grep rtt | awk -F',' '{print $4}' | awk -F' ' '{print $6}'`
      if [ "X$var" = "X" ]; then
        MIN=0
        AVG=0
        MAX=0 
      else
        MIN=`echo $var | awk -F'/' '{print $1}'`
        AVG=`echo $var | awk -F'/' '{print $2}'`
        MAX=`echo $var | awk -F'/' '{print $3}'` 
      fi
      debug_log "Min = $MIN, Max = $MAX, Avg = $AVG"
    fi

  #TODO : Packet_received is calculated as per sample text available in shell script
  #This needs to be tested; cannot test on 29/03/14 as HP_UX machine is not available
  elif [ "X$OS_NAME" = "XHP-UX" ]; then
    Packet_loss=`grep "packet loss" $PING_OUT_HPUX | awk -F' ' '{print $7}' | awk -F'%' '{print $1}'` 
    Packet_received=`grep "packet loss" $PING_OUT_HPUX | awk -F' ' '{print $4}'`
    var=`grep "min/avg/max" $PING_OUT_HPUX | awk -F' ' '{print $5}'`
    if [ "X$var" = "X" ]; then
      MIN=0
      AVG=0
      MAX=0
    else
      MIN=`echo $var | awk -F'/' '{print $1}'`
      AVG=`echo $var | awk -F'/' '{print $2}'`
      MAX=`echo $var | awk -F'/' '{print $3}'`
    fi
    debug_log "Min = $MIN, Max = $MAX, Avg = $AVG"
  fi    
}

show_data()
{  
#  Delay Time (ms) . times
#    Sum . Avg * count
#    Min . From min
#    Max . From max
#    Count (same as what is used for .c)
#  Packet Loss (Pct) . Sample
#    From ping output without % sign

  #Output will be like
  #88.3 0.474 2.335 100 0
  #SUM=`echo "scale=3; $AVG * $COUNT" | bc`
  echo "$AVG $MIN $MAX $Packet_received $Packet_loss"
}

#############################################################################################################

while getopts s:S:c:i:D:? C  2>/dev/null
do
  case $C in
    s) HOSTNAME_OR_IP=$OPTARG;;
    S) SIZE=$OPTARG;;              #by default,do not pass size to ping command
    c) COUNT=$OPTARG;;
    i) INTERVAL_SECS=$OPTARG;;          #has default interval 10 sec
    D) DEBUG_LEVEL=$OPTARG;;         #has default debug_level 0
    ?) Usage "Invalid arguments";;
    *) Usage "Invalid arguments";;
  esac
done


if [ "X$HOSTNAME_OR_IP" = "X" ]; then
  error_log_and_exit "Mandatory argument -s <HOSTNAME_OR_IP> is missing"
fi

lib_sleep $INTERVAL_SECS                 #Because first sample comes after freq 
while true
  do
    isTestOver $MON_TEST_RUN
    # Test is over. So exit with success status
    if [ $? = 1 ]; then 
      exit 0
    fi
 
    # Executing ping command and get data
    get_data
 
    # To display final output i.e. both the values : * obtained after executing the formula on diff.
    #                                                * obtained after executing the formula on cur_data.
    show_data
    lib_sleep $INTERVAL_SECS 
    rm -f $PING_OUT_HPUX
  done

exit 0       
