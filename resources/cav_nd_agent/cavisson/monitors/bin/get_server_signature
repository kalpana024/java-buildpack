#----------------------------------------------------------------------
# Name            :  get_server_signature
# Author          :  Archana 
# Purpose         :  This is to get server signature. 
#                    This program has internal used for SERVER_SIGNATURE
# Usage           :  get_server_signature <Signature name> {-f <file name> | -c <command with/without args>}
# Where:
#	-f use for 'File Name' if server signature type is 'File'
#	-c use for 'Command Name' if server signature type is 'Command'
#Example - If Server signature type is 'Command':
#  SERVER_SIGNATURE  192.168.18.106  Server_sig_version   Command  nsu_get_version
#  Output of command 'nsu_get_version' would be ftp in test run log directory as TRXXXX/server_signatures/Server_sig_version.ssf
#Example - If Server signature type is 'File':
#  SERVER_SIGNATURE  192.168.18.107  File  Server_sig_process   File  /tmp/process_status.log
#  Output of File '/tmp/process_status.log' would be ftp in test run log directory as TRXXXX/server_signatures/Server_sig_process.ssf
# Initial version  :  April 01 2009 
# Modified version :  April 04 2009 
#----------------------------------------------------------------------

. $CAV_MON_HOME/bin/ns_check_monitor_func.sh

set_mon_shell

display_help_and_exit()
{
  echo "Usage: get_server_signature <Signature name> {-f <file name> | -c command}"
  ns_check_mon_fail_and_exit
  #exit 1
}

#This method will run command with or without args
  #$COMMAND >$PROCESS_FILE 2>&1
run_cmd()
{
  PROCESS_CMD=$CAV_MON_HOME/logs/server_sig_cmd.$$
  PROCESS_FILE=$CAV_MON_HOME/logs/server_sig.$$
  echo "$COMMAND">$PROCESS_CMD
  chmod +x $PROCESS_CMD
  $PROCESS_CMD>$PROCESS_FILE 2>&1
  if [ $? != 0 ];then
    ns_log_event "Major" "Error in running command '$COMMAND' for getting server signature '$SIGNATURE'"
    rm -f $PROCESS_FILE
    rm -f $PROCESS_CMD
    ns_check_mon_fail_and_exit
  fi
  rm -f $PROCESS_CMD
}

ftp_file_for_server_signature()
{
  ns_ftp_file_for_server_sig $PROCESS_FILE $SIGNATURE_FILE
  #Since removing PROCESS_FILE file so that saving return status
  #of method ns_ftp_file_for_server_sig in 'ret' variable to check status
  ret=$?
  if [ $cFLAG = 1 ];then
   rm -f $PROCESS_FILE
  fi
  if [ $ret = 0 ]; then
    ns_check_mon_pass_and_exit
  else
    ns_check_mon_fail_and_exit
  fi
}

SIGNATURE="$1"
SIGNATURE_FILE="${SIGNATURE}.ssf"
FLAG_ARGS=$2
cFLAG=0

if [ \( "XX$FLAG_ARGS" != "XX-c" -a "XX$FLAG_ARGS" != "XX-f" \) ];then
  display_help_and_exit
fi

if [ "XX$FLAG_ARGS" = "XX-c" ];then
  shift $(($OPTIND + 1))
  COMMAND="$*"
  echo Command is "$COMMAND"
  cFLAG=1
elif [ "XX$FLAG_ARGS" = "XX-f" ];then
  shift $(($OPTIND + 1))
  PROCESS_FILE="$*"
else
  display_help_and_exit
fi

if [ $cFLAG = 1 ];then
   run_cmd
fi

ftp_file_for_server_signature

exit 0
